[project]
  authors = [
    { name = "Sasan Jacob Rasti", email = "sasan.accounts@icloud.com" },
  ]
  dependencies = ["loguru", "mutagen", "requests", "schedule", "tinytag"]
  description = ""
  dynamic = ["classifiers"]
  license = { text = "MIT" }
  name = "music-library-tools"
  requires-python = ">=3.11"
  version = "0.1.0"

  [project.urls]
    homepage = "https://github.com/sasanjac/music-library-tools"

  [project.optional-dependencies]

[build-system]
  build-backend = "pdm.pep517.api"
  requires      = ["pdm-pep517"]

[tool]

  [tool.pdm]

    [tool.pdm.dev-dependencies]
      linter    = ["ruff"]
      prototype = ["ipykernel", "ipywidgets"]
      testing   = ["pytest"]
      typing    = ["mypy", "types-requests"]

[tool.ruff]
  line-length = 120

  [tool.ruff.lint]
    ignore = [
      "ANN002",
      "ANN003",
      "ANN101",
      "ANN102",
      "C901",
      "D100",
      "D101",
      "D102",
      "D103",
      "D104",
      "D105",
      "D106",
      "D107",
      "D202",
      "D203",
      "D401",
      "E402",
      "E501",
    ]
    select = ["ALL"]

    [tool.ruff.lint.flake8-type-checking]
      runtime-evaluated-decorators = [
        "attrs.define",
        "attrs.frozen",
        "pydantic.dataclasses.dataclass",
      ]

    [tool.ruff.lint.isort]
      force-single-line = true

    [tool.ruff.lint.pydocstyle]
      convention = "pep257"

    [tool.ruff.lint.pep8-naming]
      classmethod-decorators = [
        "classmethod",
        "pydantic.root_validator",
        "pydantic.validator",
      ]

    [tool.ruff.lint.pylint]
      max-args = 10

    [tool.ruff.lint.flake8-import-conventions.extend-aliases]
      "datetime"         = "dt"
      "geopandas"        = "gpd"
      "gymnasium"        = "gym"
      "numpy.typing"     = "npt"
      "pandapower"       = "pp"
      "rasterio"         = "rio"
      "shapely.geometry" = "shg"
      "simbench"         = "sb"
      "typing"           = "t"

[tool.ruff.lint.per-file-ignores]
  "tests/*" = ["ANN001", "ANN201", "INP001", "S101"]


[tool.mypy]
  follow_imports         = "normal"
  ignore_missing_imports = true
  mypy_path              = "music_library_tools"
  namespace_packages     = true
  strict_optional        = true
  warn_no_return         = true
  warn_redundant_casts   = true
  warn_unused_ignores    = true

[tool.pyright]
  exclude = ["**/__pycache__"]
